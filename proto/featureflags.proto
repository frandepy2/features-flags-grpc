syntax = "proto3";

package featureflags;

option go_package = "github.com/frandepy2/featureflags-grpc/proto;featureflags";

service FeatureFlags {
  rpc GetFeature (FeatureRequest) returns (FeatureResponse);
  rpc SetFeature (FeatureConfig) returns (FeatureAck);
  rpc ListFlags (FeatureQuery) returns (FeatureList);
  rpc WatchFeature (FeatureRequest) returns (stream FeatureResponse);
}


message FeatureValue {
  oneof value {
    bool bool_value = 1;
    string string_value = 2;
    int32 int_value = 3;
    string json_value = 4;
  }
}

message FeatureRequest {
  string feature_key = 1;
  string user_id = 2;
  string app = 3;
  string env = 4;
}

message FeatureQuery {
  string app = 1;
  string env = 2;
}

message FeatureEntry {
  string feature_key = 1;
  FeatureValue value = 2;
}

message FeatureList {
  repeated FeatureEntry flags = 1;
}

message FeatureResponse {
  FeatureValue value = 1;
}

message FeatureConfig {
  string feature_key = 1;
  FeatureValue value = 2;
  string app = 3;
  string env = 4;
}

message FeatureAck {
  bool success = 1;
}

